name: Tag Images to Test and Push to Artifactory

on:
  push:
    branches: 'feature/emcri-12'
    paths:
      - ".github/workflows/project-test-build-push-pipeline.yml"
  workflow_dispatch:
env:
  WORKING_DIRECTORY: ./
  OAUTH_IMAGE_NAME: oauth-server
  API_IMAGE_NAME: dfa-portal-api
  LANDING_IMAGE_NAME: dfa-landing-page
  UI_IMAGE_NAME: dfa-portal-ui
  DEV_VERSION: dev
  TEST_VERSION: test
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Log into registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_PROJECT_REGISTRY }}
          username: ${{ secrets.DOCKER_PROJECT_USERNAME }}
          password: ${{ secrets.DOCKER_PROJECT_PASSWORD_BUILDER }}

      - name: Docker Pull Dev Images
        id: pull
        run: |
          docker pull ${{ secrets.DOCKER_PROJECT_REGISTRY }}/${{ env.OAUTH_IMAGE_NAME }}:${{ env.DEV_VERSION }}
          docker pull ${{ secrets.DOCKER_PROJECT_REGISTRY }}/${{ env.API_IMAGE_NAME }}:${{ env.DEV_VERSION }}
          docker pull ${{ secrets.DOCKER_PROJECT_REGISTRY }}/${{ env.LANDING_IMAGE_NAME }}:${{ env.DEV_VERSION }}
          docker pull ${{ secrets.DOCKER_PROJECT_REGISTRY }}/${{ env.UI_IMAGE_NAME }}:${{ env.DEV_VERSION }}

      - name: Tag to Test
        id: retag
        run: |
          docker tag ${{ secrets.DOCKER_PROJECT_REGISTRY }}/${{ env.OAUTH_IMAGE_NAME }}:dev ${{ secrets.DOCKER_PROJECT_REGISTRY }}/${{ env.OAUTH_IMAGE_NAME }}:${{ env.TEST_VERSION }}
          docker tag ${{ secrets.DOCKER_PROJECT_REGISTRY }}/${{ env.API_IMAGE_NAME }}:${{ env.DEV_VERSION }} ${{ secrets.DOCKER_PROJECT_REGISTRY }}/${{ env.API_IMAGE_NAME }}:${{ env.TEST_VERSION }} 
          docker tag ${{ secrets.DOCKER_PROJECT_REGISTRY }}/${{ env.LANDING_IMAGE_NAME }}:${{ env.DEV_VERSION }} ${{ secrets.DOCKER_PROJECT_REGISTRY }}/${{ env.LANDING_IMAGE_NAME }}:${{ env.TEST_VERSION }}
          docker tag ${{ secrets.DOCKER_PROJECT_REGISTRY }}/${{ env.UI_IMAGE_NAME }}:${{ env.DEV_VERSION }} ${{ secrets.DOCKER_PROJECT_REGISTRY }}/${{ env.UI_IMAGE_NAME }}:${{ env.TEST_VERSION }}

      - name: Push test image to registry
        id: publish
        run: |
          docker push ${{ secrets.DOCKER_PROJECT_REGISTRY }}/${{ env.OAUTH_IMAGE_NAME }}:${{ env.TEST_VERSION }}
          docker push ${{ secrets.DOCKER_PROJECT_REGISTRY }}/${{ env.API_IMAGE_NAME }}:${{ env.TEST_VERSION }}
          docker push ${{ secrets.DOCKER_PROJECT_REGISTRY }}/${{ env.LANDING_IMAGE_NAME }}:${{ env.TEST_VERSION }}
          docker push ${{ secrets.DOCKER_PROJECT_REGISTRY }}/${{ env.UI_IMAGE_NAME }}:${{ env.TEST_VERSION }}

      - name: Checkout ArgoCD Repo
        id: gitops
        uses: actions/checkout@v4
        with:
          repository: bcgov-c/tenant-gitops-c2ee1a
          ref: main
          token: ${{ secrets.GITOPS_KEY }} # `GH_PAT` is a secret that contains your PAT
          path: gitops

      - name: Update Helm Values and Commit
        id: helm
        if: steps.gitops.outcome == 'success'  # Only run if the previous step (publish) was successful
        run: |
          # Clone the GitOps deployment configuration repository
          # Navigate to the directory containing your Helm values file for the environment develop -> DEV, test -> test and 
          cd gitops/charts
          
          # Update the Helm values file with the new image tag or (SHA)
          DATETIME=$(date +'%Y-%m-%d %H:%M:%S')  # Get current date and time
          sed -i  "s/apitag: .*/apitag: test # Image Updated on $DATETIME/" ../deploy/test_values.yaml
          sed -i  "s/landingtag: .*/landingtag: test # Image Updated on $DATETIME/" ../deploy/test_values.yaml
          sed -i  "s/authtag: .*/authtag: test # Image Updated on $DATETIME/" ../deploy/test_values.yaml
          sed -i  "s/uitag: .*/uitag: test # Image Updated on $DATETIME/" ../deploy/test_values.yaml
          
          # Commit and push the changes
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          
          git add ../deploy/test_values.yaml
          
          # Repackage Helm Chart  

          cd dfa-gitops

          helm dependency build

          cd charts

          git add .
          
          git commit -m "Update test image tags on $DATETIME"
          git push origin main  # Update the branch name as needed